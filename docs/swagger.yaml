definitions:
  jwtmodel.UserClaims:
    properties:
      id:
        type: integer
      iss:
        type: string
      realm:
        type: string
      roles:
        items:
          type: object
        type: array
      sub:
        type: string
    type: object
  models.User:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      email_checked:
        type: boolean
      id:
        type: integer
      last_login:
        type: string
      phone:
        type: string
      phone_checked:
        type: boolean
      updated_at:
        type: string
      user_type:
        type: integer
      username:
        type: string
    type: object
  models.UserProfile:
    properties:
      createdAt:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  vo.Common:
    properties:
      message:
        example: unauthorized
        type: string
      status:
        example: 401
        type: integer
      timestamp:
        example: "2048-05-06 12:34:56"
        type: string
    type: object
  vo.LoginResult:
    properties:
      expire:
        type: string
      message:
        example: unauthorized
        type: string
      refresh_url:
        example: /api/auth/refreshToken
        type: string
      status:
        example: 401
        type: integer
      timestamp:
        example: "2048-05-06 12:34:56"
        type: string
      token:
        example: asdsadasdasdasd
        type: string
    type: object
  vo.UserData:
    properties:
      claims:
        $ref: '#/definitions/jwtmodel.UserClaims'
        type: object
      message:
        example: unauthorized
        type: string
      profile:
        $ref: '#/definitions/models.UserProfile'
        type: object
      status:
        example: 401
        type: integer
      timestamp:
        example: "2048-05-06 12:34:56"
        type: string
      user:
        $ref: '#/definitions/models.User'
        type: object
    type: object
  vo.UserUpdateInfo:
    properties:
      email:
        example: hafrans@163.com
        type: string
      phone:
        example: test@gov.cn
        type: string
    required:
    - email
    - phone
    type: object
info:
  contact:
    email: lvzh@hafrans.com
    name: Chuuka Ro (Hafrans)
    url: http://hafrans.com/support
  description: 岚山区劳动争议调解区块链平台，后台采用golang开发，使用gin + gorm + gorbac + jwt开发
  license: {}
  termsOfService: http://hafrans.com
  title: 岚山区劳动争议调解区块链平台
  version: 0.0.2
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获得token以及失效日期
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: 验证码
        in: body
        name: captcha_code
        required: true
        schema:
          type: string
      - description: 验证码时间戳 （2006-01-02 15:04:05）
        in: body
        name: captcha_time
        required: true
        schema:
          type: string
      - description: 验证码挑战指令
        in: body
        name: captcha_challenge
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.LoginResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/vo.Common'
      summary: 用户登录
  /api/v1/:
    get:
      consumes:
      - application/json
      description: 测试在登录情况下是否可以访问
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.Common'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/vo.Common'
      summary: ApiIndex
      tags:
      - test
      - index
  /api/v1/tags:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 新增文章标签
  /api/v1/user/info:
    get:
      description: 获取用户信息
      produces:
      - application/json
      responses:
        "200":
          description: 正常业务处理
          schema:
            $ref: '#/definitions/vo.UserData'
        "401":
          description: 未验证
          schema:
            $ref: '#/definitions/vo.Common'
      summary: 获取用户信息
  /api/v1/user/reset_password:
    post:
      consumes:
      - application/json
      description: 用户自行修改密码
      parameters:
      - description: 原始密码
        in: body
        name: old_password
        required: true
        schema:
          type: string
      - description: 新密码，最小长度3 最大长度20
        in: body
        name: new_password
        required: true
        schema:
          type: string
      - description: 重新输入密码
        in: body
        name: confirm_password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 正常业务处理
          schema:
            $ref: '#/definitions/vo.Common'
        "401":
          description: 未验证
          schema:
            $ref: '#/definitions/vo.Common'
        "422":
          description: 表单绑定失败
          schema:
            $ref: '#/definitions/vo.Common'
        "500":
          description: 表单绑定失败
          schema:
            $ref: '#/definitions/vo.Common'
      summary: 修改密码
  /api/v1/user/update_info:
    post:
      consumes:
      - application/json
      description: 修改用户邮箱和密码
      parameters:
      - description: 请求
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/vo.UserUpdateInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 正常业务处理
          schema:
            $ref: '#/definitions/vo.Common'
        "401":
          description: 未验证
          schema:
            $ref: '#/definitions/vo.Common'
        "422":
          description: 表单绑定失败
          schema:
            $ref: '#/definitions/vo.Common'
        "500":
          description: 表单绑定失败
          schema:
            $ref: '#/definitions/vo.Common'
      summary: 修改用户基础信息（邮箱和密码）
swagger: "2.0"
